datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output             = "../prisma/generated/type-graphql"
  emitTranspiledCode = true
}

model Issue {
  id         String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  title      String
  content    String?
  published  Boolean @default(false)
  author     User    @relation("AuthoredIssues", fields: [authorId], references: [id])
  authorId   String  @db.ObjectId
  assignee   User?   @relation("AssignedIssues", fields: [assigneeId], references: [id])
  assigneeId String?  @db.ObjectId
}

model User {
  id    String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  email String  @unique
  name  String?
  authoredIssues Issue[] @relation("AuthoredIssues")
  assignedIssues Issue[] @relation("AssignedIssues")
  projectIDs String[]   @db.Array(ObjectId)
  projects  Project[] @relation(fields: [projectIDs])
}

model Project {
  id    String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  name  String?
  description  String?
  userIDs String[] @db.Array(ObjectId)
  users   User[]   @relation(fields: [userIDs])
}
